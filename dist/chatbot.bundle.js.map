{"version":3,"file":"chatbot.bundle.js","sources":["../src/utils.js","../node_modules/style-inject/dist/style-inject.es.js","../src/renderer.js","../src/chatbot.js"],"sourcesContent":["// src/utils.js\n\n/**\n * Generates a unique session ID.\n * @returns {string} A unique ID.\n */\nexport function generateUniqueId() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0,\n          v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\n/**\n * Stores data in localStorage.\n * @param {string} key - The key to store data under.\n * @param {*} value - The data to store.\n */\nexport function setLocalStorageItem(key, value) {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (e) {\n    console.warn('Chatbot SDK: localStorage write error:', e);\n  }\n}\n\n/**\n * Retrieves data from localStorage.\n * @param {string} key - The key to retrieve data from.\n * @returns {*} The retrieved data, or null if not found/error.\n */\nexport function getLocalStorageItem(key) {\n  try {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  } catch (e) {\n    console.warn('Chatbot SDK: localStorage read error:', e);\n    return null;\n  }\n}\n\n/**\n * Basic Markdown parsing for bold, italics, links.\n * This is a simplified parser. For full markdown, consider a tiny library if allowed.\n * @param {string} text - The text to parse.\n * @returns {string} HTML string with basic markdown applied.\n */\nexport function parseMarkdown(text) {\n    if (!text) return '';\n    let html = text;\n\n    // Bold: **text** or __text__\n    html = html.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n    html = html.replace(/__(.*?)__/g, '<strong>$1</strong>');\n\n    // Italics: *text* or _text_\n    html = html.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\n    html = html.replace(/_(.*?)_/g, '<em>$1</em>');\n\n    // Links: [text](url)\n    html = html.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>');\n\n    // Line breaks\n    html = html.replace(/\\n/g, '<br/>');\n\n    return html;\n}\n\n/**\n * Dynamically loads an external script.\n * @param {string} url - The URL of the script.\n * @param {string} id - A unique ID for the script tag.\n * @returns {Promise<void>} A promise that resolves when the script is loaded.\n */\nexport function loadScript(url, id) {\n    return new Promise((resolve, reject) => {\n        if (document.getElementById(id)) {\n            return resolve(); // Already loaded\n        }\n        const script = document.createElement('script');\n        script.id = id;\n        script.src = url;\n        script.async = true;\n        script.onload = () => resolve();\n        script.onerror = () => reject(new Error(`Failed to load script: ${url}`));\n        document.head.appendChild(script);\n    });\n}","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// src/renderer.js\nimport { loadScript } from './utils';\n\n// Get reference to the chatbot instance\nconst getChatbot = () => window.ChatbotSDK || { config: {} };\n\n/**\n * Applies styles to an element with priority to message-specific styles\n * @param {HTMLElement} element - The element to style\n * @param {string} component - The component type (e.g., 'buttons', 'carousel')\n * @param {string} elementType - The specific element type (e.g., 'container', 'button')\n * @param {object} [messageStyles] - Style overrides from message data (highest priority)\n */\nfunction applyStyles(element, component, elementType, messageStyles = {}) {\n  const chatbot = getChatbot();\n  \n  // Get base styles from config if they exist\n  const configStyles = chatbot.config.style?.components?.[component]?.[elementType] || {};\n  \n  // Get global message styles if they exist\n  const globalStyles = chatbot.config.style?.messages || {};\n  \n  // Merge styles with message styles taking priority\n  const styles = {\n    ...getDefaultStyles(component, elementType, globalStyles),\n    ...configStyles,\n    ...messageStyles\n  };\n\n  // Apply the combined styles\n  Object.entries(styles).forEach(([prop, value]) => {\n    if (value !== undefined && value !== null) {\n      // Handle CSS custom properties\n      if (prop.startsWith('--')) {\n        element.style.setProperty(prop, value);\n      } else {\n        element.style[prop] = value;\n      }\n    }\n  });\n}\n\n/**\n * Gets default styles based on global message styles\n */\nfunction getDefaultStyles(component, elementType, globalStyles) {\n  const defaults = {};\n  \n  switch (component) {\n    case 'buttons':\n      if (elementType === 'button') {\n        defaults.backgroundColor = globalStyles.buttonColor;\n        defaults.color = globalStyles.buttonTextColor;\n      }\n      break;\n    case 'carousel':\n      if (elementType === 'card') {\n        defaults.backgroundColor = globalStyles.botBubbleColor;\n      }\n      if (elementType === 'cardTitle' || elementType === 'cardSubtitle') {\n        defaults.color = globalStyles.botTextColor;\n      }\n      break;\n    case 'faq':\n      if (elementType === 'question') {\n        defaults.color = globalStyles.botTextColor;\n      }\n      break;\n    case 'rating':\n      if (elementType === 'star') {\n        defaults.color = globalStyles.buttonColor;\n      }\n      break;\n  }\n  \n  return defaults;\n}\n\n/**\n * Renders various message types with configured styling\n */\nexport function renderMessage(messageData, type, sendMessageCallback = null) {\n  switch (type) {\n    case 'buttons':\n      return createButtons(messageData.buttons, sendMessageCallback, messageData.style);\n    case 'image':\n      return createImage(messageData.image, messageData.style);\n    case 'video':\n      return createVideo(messageData.video, messageData.style);\n    case 'carousel':\n      return createCarousel(messageData.carousel, sendMessageCallback, messageData.style);\n    default:\n      return null;\n  }\n}\n\n/**\n * Renders custom payload types with configured styling\n */\nexport function renderCustomPayload(customPayload, sendMessageCallback = null) {\n    if (!customPayload) return null;\n\n    const customContainer = document.createElement('div');\n    customContainer.classList.add('chatbot-custom-payload');\n    applyStyles(customContainer, 'custom', 'container', customPayload.style);\n\n    if (customPayload.locations) {\n        const mapEl = createLocationsMap(customPayload.locations, customPayload.style);\n        if (mapEl) customContainer.appendChild(mapEl);\n    }\n    if (customPayload.faq_list) {\n        const faqEl = createFaqList(customPayload.faq_list, customPayload.style);\n        if (faqEl) customContainer.appendChild(faqEl);\n    }\n    if (customPayload.table) {\n        const tableEl = createTable(customPayload.table, customPayload.style);\n        if (tableEl) customContainer.appendChild(tableEl);\n    }\n    if (customPayload.rating) {\n        const ratingEl = createRating(customPayload.rating, sendMessageCallback, customPayload.style);\n        if (ratingEl) customContainer.appendChild(ratingEl);\n    }\n    if (customPayload.forms) {\n        const formEl = createDynamicForm(customPayload.forms, sendMessageCallback, customPayload.style);\n        if (formEl) customContainer.appendChild(formEl);\n    }\n\n    return customContainer.children.length > 0 ? customContainer : null;\n}\n\n// --- Component Creation Functions ---\n\nfunction createButtons(buttons, sendMessageCallback, styleOverrides = {}) {\n  if (!buttons || buttons.length === 0) return null;\n  \n  const container = document.createElement('div');\n  container.className = 'chatbot-button-container';\n  applyStyles(container, 'buttons', 'container', styleOverrides.container);\n\n  buttons.forEach(btn => {\n    const button = document.createElement('button');\n    button.textContent = btn.title;\n    button.className = 'chatbot-button';\n    \n    // Apply button styles with proper priority\n    applyStyles(button, 'buttons', 'button', {\n      // From button-specific config in message\n      ...(btn.button_color && { backgroundColor: btn.button_color }),\n      ...(btn.button_color && { color: 'white' }),\n      ...(btn.button_color && { borderColor: btn.button_color }),\n      // From style overrides\n      ...styleOverrides.button\n    });\n\n    if (btn.payload) {\n      button.addEventListener('click', () => {\n        container.querySelectorAll('button').forEach(b => b.disabled = true);\n        if (sendMessageCallback) sendMessageCallback(btn.title, btn.payload);\n      });\n    } else if (btn.url) {\n      button.addEventListener('click', () => window.open(btn.url, '_blank'));\n    } else if (btn.question) {\n      button.addEventListener('click', () => {\n        container.querySelectorAll('button').forEach(b => b.disabled = true);\n        if (sendMessageCallback) sendMessageCallback(btn.title, btn.question);\n      });\n    }\n    \n    container.appendChild(button);\n  });\n  \n  return container;\n}\n\nfunction createImage(imageUrl, styleOverrides = {}) {\n  if (!imageUrl) return null;\n  \n  const img = document.createElement('img');\n  img.src = imageUrl;\n  img.className = 'chatbot-image';\n  applyStyles(img, 'image', 'image', styleOverrides);\n  \n  return img;\n}\n\nfunction createVideo(videoUrl, styleOverrides = {}) {\n  if (!videoUrl) return null;\n  \n  const video = document.createElement('video');\n  video.src = videoUrl;\n  video.controls = true;\n  video.className = 'chatbot-video';\n  applyStyles(video, 'video', 'video', styleOverrides);\n  \n  return video;\n}\n\nfunction createCarousel(carouselItems, sendMessageCallback, styleOverrides = {}) {\n  if (!carouselItems || carouselItems.length === 0) return null;\n  \n  const container = document.createElement('div');\n  container.className = 'chatbot-carousel-container';\n  applyStyles(container, 'carousel', 'container', styleOverrides.container);\n\n  carouselItems.forEach(item => {\n    const card = document.createElement('div');\n    card.className = 'chatbot-carousel-card';\n    applyStyles(card, 'carousel', 'card', styleOverrides.card);\n\n    if (item.image_url) {\n      const img = document.createElement('img');\n      img.src = item.image_url;\n      img.className = 'chatbot-carousel-card-image';\n      applyStyles(img, 'carousel', 'cardImage', styleOverrides.cardImage);\n      card.appendChild(img);\n    }\n\n    const content = document.createElement('div');\n    content.className = 'chatbot-carousel-card-content';\n    applyStyles(content, 'carousel', 'cardContent', styleOverrides.content);\n\n    const title = document.createElement('h3');\n    title.className = 'chatbot-carousel-card-title';\n    title.textContent = item.title;\n    applyStyles(title, 'carousel', 'cardTitle', styleOverrides.title);\n    content.appendChild(title);\n\n    if (item.subtitle) {\n      const subtitle = document.createElement('p');\n      subtitle.className = 'chatbot-carousel-card-subtitle';\n      subtitle.textContent = item.subtitle;\n      applyStyles(subtitle, 'carousel', 'cardSubtitle', styleOverrides.subtitle);\n      content.appendChild(subtitle);\n    }\n\n    if (item.buttons?.length > 0) {\n      const buttonsContainer = createButtons(item.buttons, sendMessageCallback, {\n        ...styleOverrides,\n        button: {\n          ...(item.button_style || {})\n        }\n      });\n      if (buttonsContainer) content.appendChild(buttonsContainer);\n    }\n    \n    card.appendChild(content);\n    container.appendChild(card);\n  });\n  \n  return container;\n}\n\nfunction createLocationsMap(locations, styleOverrides = {}) {\n  if (!locations || locations.length === 0) return null;\n\n  const locationContainer = document.createElement('div');\n  locationContainer.className = 'chatbot-location-cards';\n  applyStyles(locationContainer, 'locations', 'container', styleOverrides.container);\n\n  locations.forEach(location => {\n    const mapUrl = `https://www.google.com/maps?q=${location.lat},${location.lng}`;\n    const staticMap = `https://maps.googleapis.com/maps/api/staticmap?center=${location.lat},${location.lng}&zoom=14&size=400x200&markers=color:red%7C${location.lat},${location.lng}&key=AIzaSyCYVHw1tnbSZsihFfewNPwvuKc0iXx0ymw`;\n\n    const card = document.createElement('div');\n    card.className = 'chatbot-location-card';\n    applyStyles(card, 'locations', 'card', styleOverrides.card);\n\n    // Map image\n    const img = document.createElement('img');\n    img.src = staticMap;\n    img.alt = `${location.name} map`;\n    img.className = 'chatbot-location-map';\n    applyStyles(img, 'locations', 'map', styleOverrides.map);\n    card.appendChild(img);\n\n    // Card body\n    const body = document.createElement('div');\n    body.className = 'chatbot-location-body';\n    applyStyles(body, 'locations', 'body', styleOverrides.body);\n\n    // Title\n    const title = document.createElement('div');\n    title.className = 'chatbot-location-title';\n    title.textContent = location.name;\n    applyStyles(title, 'locations', 'title', styleOverrides.title);\n    body.appendChild(title);\n\n    // Address\n    if (location.address) {\n      const address = document.createElement('div');\n      address.className = 'chatbot-location-address';\n      address.textContent = location.address;\n      applyStyles(address, 'locations', 'address', styleOverrides.address);\n      body.appendChild(address);\n    }\n\n    // Button\n    const button = document.createElement('a');\n    button.href = mapUrl;\n    button.target = '_blank';\n    button.className = 'chatbot-location-button';\n    button.textContent = 'View on Map';\n    applyStyles(button, 'locations', 'button', {\n      backgroundColor: getChatbot().config.style?.messages?.buttonColor,\n      color: getChatbot().config.style?.messages?.buttonTextColor,\n      ...styleOverrides.button\n    });\n    body.appendChild(button);\n\n    card.appendChild(body);\n    locationContainer.appendChild(card);\n  });\n\n  return locationContainer;\n}\n\nfunction createFaqList(faqs, styleOverrides = {}) {\n    if (!faqs || faqs.length === 0) return null;\n    \n    const container = document.createElement('div');\n    container.className = 'chatbot-faq-list-container';\n    applyStyles(container, 'faq', 'container', styleOverrides.container);\n\n    faqs.forEach((faq, index) => {\n        const item = document.createElement('div');\n        item.className = 'chatbot-faq-item';\n        applyStyles(item, 'faq', 'item', styleOverrides.item);\n\n        const question = document.createElement('div');\n        question.className = 'chatbot-faq-question';\n        question.textContent = faq.question;\n        applyStyles(question, 'faq', 'question', styleOverrides.question);\n        item.appendChild(question);\n\n        const answer = document.createElement('div');\n        answer.className = 'chatbot-faq-answer';\n        answer.innerHTML = faq.answer;\n        applyStyles(answer, 'faq', 'answer', styleOverrides.answer);\n        item.appendChild(answer);\n\n        question.addEventListener('click', () => {\n            item.classList.toggle('expanded');\n            if (item.classList.contains('expanded')) {\n                applyStyles(answer, 'faq', 'expandedAnswer', styleOverrides.expandedAnswer);\n            } else {\n                applyStyles(answer, 'faq', 'answer', styleOverrides.answer);\n            }\n        });\n        \n        container.appendChild(item);\n    });\n    \n    return container;\n}\n\nfunction createTable(tableData, styleOverrides = {}) {\n    if (!tableData || !tableData.headers || !tableData.rows) return null;\n\n    const container = document.createElement('div');\n    container.className = 'chatbot-table-container';\n    applyStyles(container, 'table', 'container', styleOverrides.container);\n\n    const table = document.createElement('table');\n    table.className = 'chatbot-table';\n    applyStyles(table, 'table', 'table', styleOverrides.table);\n\n    const thead = document.createElement('thead');\n    const headerRow = document.createElement('tr');\n    tableData.headers.forEach(headerText => {\n        const th = document.createElement('th');\n        th.textContent = headerText;\n        applyStyles(th, 'table', 'header', {\n          backgroundColor: getChatbot().config.style?.messages?.buttonColor,\n          color: getChatbot().config.style?.messages?.buttonTextColor,\n          ...styleOverrides.header\n        });\n        headerRow.appendChild(th);\n    });\n    thead.appendChild(headerRow);\n    table.appendChild(thead);\n\n    const tbody = document.createElement('tbody');\n    tableData.rows.forEach(rowData => {\n        const tr = document.createElement('tr');\n        rowData.forEach(cellData => {\n            const td = document.createElement('td');\n            td.textContent = cellData;\n            applyStyles(td, 'table', 'cell', styleOverrides.cell);\n            tr.appendChild(td);\n        });\n        tbody.appendChild(tr);\n    });\n    table.appendChild(tbody);\n\n    container.appendChild(table);\n    return container;\n}\n\nfunction createRating(ratingData, sendMessageCallback, styleOverrides = {}) {\n    if (!ratingData || !ratingData.scale) return null;\n\n    const container = document.createElement('div');\n    container.className = 'chatbot-rating-container';\n    applyStyles(container, 'rating', 'container', styleOverrides.container);\n\n    const title = document.createElement('div');\n    title.className = 'chatbot-rating-title';\n    title.textContent = ratingData.title || 'Please rate:';\n    applyStyles(title, 'rating', 'title', styleOverrides.title);\n    container.appendChild(title);\n\n    const starsContainer = document.createElement('div');\n    starsContainer.className = 'chatbot-stars';\n    applyStyles(starsContainer, 'rating', 'starsContainer', styleOverrides.starsContainer);\n    let selectedRating = 0;\n\n    for (let i = ratingData.scale; i >= 1; i--) {\n        const star = document.createElement('span');\n        star.innerHTML = '&#9733;';\n        star.dataset.value = i;\n        applyStyles(star, 'rating', 'star', {\n          color: getChatbot().config.style?.messages?.buttonColor,\n          ...styleOverrides.star\n        });\n\n        star.addEventListener('mouseover', () => {\n            starsContainer.querySelectorAll('span').forEach(s => {\n                if (parseInt(s.dataset.value) >= i) {\n                    s.classList.add('hover');\n                    applyStyles(s, 'rating', 'starHover', {\n                      color: getChatbot().config.style?.themeColor,\n                      ...styleOverrides.starHover\n                    });\n                }\n            });\n        });\n\n        star.addEventListener('mouseout', () => {\n            starsContainer.querySelectorAll('span').forEach(s => {\n                s.classList.remove('hover');\n                applyStyles(s, 'rating', 'star', {\n                  color: getChatbot().config.style?.messages?.buttonColor,\n                  ...styleOverrides.star\n                });\n            });\n        });\n\n        star.addEventListener('click', () => {\n            selectedRating = i;\n            starsContainer.querySelectorAll('span').forEach(s => {\n                if (parseInt(s.dataset.value) <= selectedRating) {\n                    s.classList.add('selected');\n                    applyStyles(s, 'rating', 'starSelected', {\n                      color: getChatbot().config.style?.themeColor,\n                      ...styleOverrides.starSelected\n                    });\n                } else {\n                    s.classList.remove('selected');\n                    applyStyles(s, 'rating', 'star', {\n                      color: getChatbot().config.style?.messages?.buttonColor,\n                      ...styleOverrides.star\n                    });\n                }\n            });\n            if (sendMessageCallback) {\n                sendMessageCallback(`Rated ${selectedRating} stars`, `/rate_service{\"rating\":${selectedRating}}`);\n            }\n        });\n        starsContainer.appendChild(star);\n    }\n    container.appendChild(starsContainer);\n    return container;\n}\n\nfunction createDynamicForm(formData, sendMessageCallback, styleOverrides = {}) {\n    if (!formData || !formData.fields || !formData.submit_payload) return null;\n\n    const container = document.createElement('div');\n    container.className = 'chatbot-form-container';\n    applyStyles(container, 'form', 'container', styleOverrides.container);\n\n    if (formData.title) {\n        const title = document.createElement('div');\n        title.className = 'chatbot-form-title';\n        title.textContent = formData.title;\n        applyStyles(title, 'form', 'title', styleOverrides.title);\n        container.appendChild(title);\n    }\n\n    const form = document.createElement('form');\n    applyStyles(form, 'form', 'form', styleOverrides.form);\n    \n    form.addEventListener('submit', (e) => {\n        e.preventDefault();\n        const formValues = {};\n        formData.fields.forEach(field => {\n            const input = form.querySelector(`[name=\"${field.field_name}\"]`);\n            if (input) formValues[field.field_name] = input.value;\n        });\n\n        if (sendMessageCallback) {\n            const userMessageText = `Submitted form: ${Object.entries(formValues).map(([key, value]) => `${key}: ${value}`).join(', ')}`;\n            const submitPayload = `${formData.submit_payload}${JSON.stringify(formValues)}`;\n            sendMessageCallback(userMessageText, submitPayload);\n        }\n        form.querySelectorAll('input, select, button').forEach(el => el.disabled = true);\n    });\n\n    formData.fields.forEach(field => {\n        const fieldDiv = document.createElement('div');\n        fieldDiv.className = 'chatbot-form-field';\n        applyStyles(fieldDiv, 'form', 'field', styleOverrides.field);\n\n        const label = document.createElement('label');\n        label.textContent = field.label;\n        label.htmlFor = `chatbot-form-${field.field_name}`;\n        applyStyles(label, 'form', 'label', styleOverrides.label);\n        fieldDiv.appendChild(label);\n\n        let inputElement;\n        if (field.type === 'select' && field.options) {\n            inputElement = document.createElement('select');\n            field.options.forEach(optionText => {\n                const option = document.createElement('option');\n                option.value = optionText;\n                option.textContent = optionText;\n                inputElement.appendChild(option);\n            });\n        } else {\n            inputElement = document.createElement('input');\n            inputElement.type = field.type;\n        }\n        \n        inputElement.id = `chatbot-form-${field.field_name}`;\n        inputElement.name = field.field_name;\n        inputElement.placeholder = field.placeholder || '';\n        inputElement.required = field.required || false;\n        applyStyles(inputElement, 'form', 'input', {\n          backgroundColor: getChatbot().config.style?.messages?.inputBackground,\n          color: getChatbot().config.style?.messages?.inputTextColor,\n          borderColor: getChatbot().config.style?.messages?.inputBorderColor,\n          ...styleOverrides.input\n        });\n        \n        fieldDiv.appendChild(inputElement);\n        form.appendChild(fieldDiv);\n    });\n\n    const submitButton = document.createElement('button');\n    submitButton.type = 'submit';\n    submitButton.className = 'chatbot-form-submit-button';\n    submitButton.textContent = formData.submit_button_text || 'Submit';\n    applyStyles(submitButton, 'form', 'submitButton', {\n      backgroundColor: getChatbot().config.style?.messages?.buttonColor,\n      color: getChatbot().config.style?.messages?.buttonTextColor,\n      ...styleOverrides.submitButton\n    });\n    form.appendChild(submitButton);\n\n    container.appendChild(form);\n    return container;\n}","// src/chatbot.js\nimport './chatbot.css';\nimport { parseMarkdown, generateUniqueId, setLocalStorageItem, getLocalStorageItem } from './utils';\nimport { renderMessage, renderCustomPayload } from './renderer';\n\nclass ChatbotWidget {\n  constructor() {\n    this.config = {};\n    this.isOpen = false;\n    this.sessionId = null;\n    this.messages = [];\n    this.elements = {};\n    this.refreshInterval = null;\n    this.debug = true;\n  }\n\n  log(...args) {\n    if (this.debug) console.log('[Chatbot]', ...args);\n  }\n\n  // --- Configuration & Initialization ---\n  initConfig(apiConfig = {}) {\n    const scriptTag = document.querySelector('script[src*=\"chatbot.bundle.js\"]');\n    let scriptConfig = {};\n\n    if (scriptTag) {\n      const configJson = scriptTag.getAttribute('chatbot-config');\n      if (configJson) {\n        try {\n          scriptConfig = JSON.parse(configJson);\n        } catch (e) {\n          console.error('Chatbot SDK: Invalid JSON in chatbot-config attribute', e);\n        }\n      }\n    }\n\n    this.config = {\n      ...scriptConfig,\n      ...apiConfig\n    };\n\n    // Apply defaults if not set\n    this.config.botUrl = this.config.botUrl || 'http://0.0.0.0:8000/chat';\n    this.config.themeColor = this.config.themeColor || '#020c15ff';\n    this.config.position = this.config.position || 'bottom-right';\n    this.config.botName = this.config.botName || 'Chatbot';\n    this.config.inputPlaceholder = this.config.inputPlaceholder || 'Type your message...';\n    this.config.sendButtonText = this.config.sendButtonText || 'Send';\n  }\n\n  async init() {\n    this.initConfig();\n    await this.loadConfig();\n    this.initSession();  if (document.readyState === 'complete' || document.readyState === 'interactive') {\n    this.createWidgetUI();\n  } else {\n    document.addEventListener('DOMContentLoaded', () => {\n      console.log('DOM fully loaded, creating UI');\n      this.createWidgetUI();\n    });\n  }\n  \n  // Fallback timeout\n  setTimeout(() => {\n    if (!this.elements.container) {\n      console.warn('Fallback UI creation');\n      this.createWidgetUI();\n    }\n  }, 1000);\n\n  }\n\n  async loadConfig() {\n    if (this.config.configApiUrl) {\n      try {\n        this.log('Loading initial config from API');\n        const response = await fetch(`${this.config.configApiUrl}?t=${Date.now()}`);\n        const apiConfig = await response.json();\n        this.mergeConfigs(apiConfig);\n      } catch (error) {\n        this.log('Initial config load failed:', error);\n      }\n    }\n  }\n\n  // --- Dynamic Configuration ---\n  async refreshConfig() {\n    try {\n      this.log('Refreshing configuration...');\n      const response = await fetch(`${this.config.configApiUrl}?t=${Date.now()}`);\n      const newConfig = await response.json();\n      this.mergeConfigs(newConfig);\n      this.applyDynamicStyles();\n      this.updateUIElements();\n      this.log('Configuration refreshed successfully');\n      return true;\n    } catch (error) {\n      this.log('Failed to refresh config:', error);\n      return false;\n    }\n  }\n\n  mergeConfigs(newConfig) {\n    this.config = {\n      ...this.config,\n      ...newConfig,\n      style: {\n        ...(this.config.style || {}),\n        ...(newConfig.style || {})\n      },\n      features: {\n        ...(this.config.features || {}),\n        ...(newConfig.features || {})\n      }\n    };\n    this.log('Merged config:', this.config);\n  }\n\n  applyDynamicStyles() {\n    if (!this.config.style) {\n      this.log('No style configuration found');\n      return;\n    }\n\n    const root = document.documentElement;\n    const { style } = this.config;\n\n    if (style.themeColor) {\n      root.style.setProperty('--chatbot-theme-color', style.themeColor);\n      root.style.setProperty('--chatbot-theme-color-hover', this.adjustColor(style.themeColor, -20));\n    }\n\n    if (style.header?.backgroundColor) {\n      root.style.setProperty('--chatbot-header-bg', style.header.backgroundColor);\n    }\n\n    if (style.header?.textColor) {\n      root.style.setProperty('--chatbot-header-text', style.header.textColor);\n    }\n\n    if (style.bubble?.color) {\n      root.style.setProperty('--chatbot-bubble-color', style.bubble.color);\n    }\n\n    if (style.messages?.userBubbleColor) {\n      root.style.setProperty('--chatbot-user-bubble', style.messages.userBubbleColor);\n    }\n\n    if (style.messages?.botBubbleColor) {\n      root.style.setProperty('--chatbot-bot-bubble', style.messages.botBubbleColor);\n    }\n  }\n\n  adjustColor(color, amount) {\n    return '#' + color.replace(/^#/, '').replace(/../g, colorHex => \n      ('0' + Math.min(255, Math.max(0, parseInt(colorHex, 16) + amount)).toString(16)).slice(-6));\n  }\n\n  // --- UI Management ---\n  createWidgetUI() {\n    console.log('Creating widget UI...'); // Debug 1\n    console.log('Config:', this.config); // Debug 2\n  \n    const container = document.createElement('div');\n    container.id = 'chatbot-widget-container';\n    console.log('Container created:', container); // Debug 3\n\n    container.classList.add(`chatbot-position-${this.config.position}`);\n    container.style.display = 'none';\n    container.style.opacity = '0';\n    \n\n    document.body.appendChild(container);\n    this.elements.container = container;\n    setTimeout(() => {\n        const computedStyle = window.getComputedStyle(this.elements.container);\n        console.log('Computed styles:', {\n            display: computedStyle.display,\n            opacity: computedStyle.opacity,\n            zIndex: computedStyle.zIndex,\n            visibility: computedStyle.visibility\n        });\n        }, 500);\n    // Apply animation settings\n    const animation = this.config.style?.animation || { type: 'fade-in', duration: 300 };\n    if (animation.type) {\n      container.style.transition = `all ${animation.duration}ms ease`;\n    }\n\n    // Create Chat Bubble\n    const bubble = document.createElement('div');\n    bubble.className = 'chatbot-bubble';\n    \n    const bubbleStyle = this.config.style?.bubble || {};\n    bubble.style.width = bubbleStyle.size || '60px';\n    bubble.style.height = bubbleStyle.size || '60px';\n    bubble.style.backgroundColor = bubbleStyle.color || 'var(--chatbot-theme-color)';\n    \n    if (bubbleStyle.icon) {\n      bubble.innerHTML = bubbleStyle.icon.startsWith('http') ? \n        `<img src=\"${bubbleStyle.icon}\" alt=\"Chat\" style=\"width: 70%; height: 70%;\">` : \n        bubbleStyle.icon;\n    } else {\n      bubble.innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\">\n          <path d=\"M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"/>\n        </svg>\n      `;\n    }\n    \n    bubble.addEventListener('click', () => this.toggleChatWindow());\n    container.appendChild(bubble);\n    this.elements.bubble = bubble;\n\n    // Create Chat Window\n    const windowEl = document.createElement('div');\n    windowEl.className = 'chatbot-window';\n    this.refreshConfig()\n    const headerStyle = this.config.style?.header || {};\n    windowEl.innerHTML = `\n      <div class=\"chatbot-header\" style=\"\n        ${headerStyle.backgroundColor ? `background-color: ${headerStyle.backgroundColor};` : ''}\n        ${headerStyle.textColor ? `color: ${headerStyle.textColor};` : ''}\n      \">\n        ${headerStyle.icon ? \n          `<img src=\"${headerStyle.icon}\" class=\"chatbot-header-icon\" \n            style=\"width: ${headerStyle.iconSize || '30px'}; height: ${headerStyle.iconSize || '30px'};\">` : ''}\n        <span class=\"chatbot-header-title\">${this.config.botName}</span>\n        <button class=\"chatbot-header-close\" style=\"\n          ${headerStyle.textColor ? `color: ${headerStyle.textColor};` : ''}\n        \">&times;</button>\n      </div>\n      <div class=\"chatbot-messages\"></div>\n      <div class=\"chatbot-input-area\">\n        <input type=\"text\" placeholder=\"${this.config.inputPlaceholder}\" />\n        <button class=\"chatbot-send-button\">${this.config.sendButtonText}</button>\n      </div>\n    `;\n\n    container.appendChild(windowEl);\n    this.elements.window = windowEl;\n    this.elements.messagesContainer = windowEl.querySelector('.chatbot-messages');\n    this.elements.inputField = windowEl.querySelector('.chatbot-input-area input');\n    this.elements.sendButton = windowEl.querySelector('.chatbot-input-area button');\n    this.elements.closeButton = windowEl.querySelector('.chatbot-header-close');\n    this.elements.headerTitle = windowEl.querySelector('.chatbot-header-title');\n\n    // Add refresh button\n\n\n    // Event Listeners\n    this.elements.closeButton.addEventListener('click', () => this.toggleChatWindow());\n    this.elements.sendButton.addEventListener('click', () => this.sendMessage());\n    this.elements.inputField.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') this.sendMessage();\n    });\n\n    // Render messages and show\n    this.messages.forEach(msg => this.displayMessage(msg, false));\n    this.scrollToBottom();\n    this.showWidget();\n\n    // Start auto-refresh if configured\n    if (this.config.autoRefresh) {\n      this.startAutoRefresh(this.config.autoRefreshInterval || 300000);\n    }\n  }\n\n  updateUIElements() {\n    if (this.elements.headerTitle) {\n      this.elements.headerTitle.textContent = this.config.botName;\n    }\n    \n    if (this.elements.inputField) {\n      this.elements.inputField.placeholder = this.config.inputPlaceholder;\n    }\n    \n    if (this.elements.sendButton) {\n      this.elements.sendButton.textContent = this.config.sendButtonText;\n    }\n    \n\n  }\n\n  showWidget() {\n      console.log('Attempting to show widget...'); // Debug 4\n  \n  // Force visibility for debugging\n    this.elements.container.style.display = 'block';\n    this.elements.container.style.opacity = '1';\n    this.elements.container.style.zIndex = '99999';\n    \n    // Original animation code\n    const animation = this.config.style?.animation || { type: 'fade-in', duration: 300 };\n    console.log('Using animation:', animation); // Debug 5\n\n    this.elements.container.style.display = 'block';\n    \n    if (animation.type === 'fade-in') {\n      setTimeout(() => {\n        this.elements.container.style.opacity = '1';\n      }, 50);\n    } else if (animation.type === 'slide-up') {\n      this.elements.container.style.transform = 'translateY(20px)';\n      setTimeout(() => {\n        this.elements.container.style.transition = `all ${animation.duration}ms ease`;\n        this.elements.container.style.opacity = '1';\n        this.elements.container.style.transform = 'translateY(0)';\n      }, 50);\n    } else {\n      this.elements.container.style.opacity = '1';\n    }\n  }\n\n  // --- Auto Refresh ---\n  startAutoRefresh(interval = 300000) {\n    this.stopAutoRefresh();\n    this.refreshInterval = setInterval(() => this.refreshConfig(), interval);\n    this.log(`Started auto-refresh every ${interval/1000} seconds`);\n  }\n\n  stopAutoRefresh() {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n      this.refreshInterval = null;\n    }\n  }\n\n  // --- Session Management ---\n  initSession() {\n    this.sessionId = getLocalStorageItem('chatbot_session_id');\n    if (!this.sessionId) {\n      this.sessionId = generateUniqueId();\n      setLocalStorageItem('chatbot_session_id', this.sessionId);\n    }\n    this.messages = getLocalStorageItem(`chatbot_conversation_${this.sessionId}`) || [];\n  }\n\n  // --- Message Handling ---\n  displayMessage(message, save = true) {\n    const messageElement = document.createElement('div');\n    messageElement.classList.add('chatbot-message', message.sender === 'user' ? 'user' : 'bot');\n\n    if (message.text) {\n      const textContent = document.createElement('div');\n      textContent.innerHTML = parseMarkdown(message.text);\n      messageElement.appendChild(textContent);\n    }\n\n    if (message.buttons?.length > 0) {\n      const buttonContainer = renderMessage(message, 'buttons', this.sendMessage.bind(this));\n      if (buttonContainer) messageElement.appendChild(buttonContainer);\n    }\n    \n    if (message.image) {\n      const imageEl = renderMessage(message, 'image');\n      if (imageEl) messageElement.appendChild(imageEl);\n    }\n    \n    if (message.video) {\n      const videoEl = renderMessage(message, 'video');\n      if (videoEl) messageElement.appendChild(videoEl);\n    }\n    \n    if (message.carousel?.length > 0) {\n      const carouselEl = renderMessage(message, 'carousel', this.sendMessage.bind(this));\n      if (carouselEl) messageElement.appendChild(carouselEl);\n    }\n    \n    if (message.custom) {\n      const customEl = renderCustomPayload(message.custom, this.sendMessage.bind(this));\n      if (customEl) messageElement.appendChild(customEl);\n    }\n\n    this.elements.messagesContainer.appendChild(messageElement);\n    \n    if (save) {\n      this.messages.push(message);\n      setLocalStorageItem(`chatbot_conversation_${this.sessionId}`, this.messages);\n    }\n    \n    this.scrollToBottom();\n  }\n\n  async sendMessage(text = null, payload = null) {\n    let messageText = text || this.elements.inputField.value.trim();\n    if (!messageText && !payload) return;\n\n    const userMessage = { sender: 'user', text: messageText };\n    this.displayMessage(userMessage);\n    this.elements.inputField.value = '';\n\n    const requestBody = {\n      sender: this.sessionId,\n      message: messageText,\n      ...(payload && { customData: { payload } })\n    };\n\n    try {\n      const response = await fetch(this.config.botUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n      const botResponses = await response.json();\n      if (botResponses?.length > 0) {\n        botResponses.forEach(response => this.displayMessage({ sender: 'bot', ...response }));\n      } else {\n        this.displayMessage({ sender: 'bot', text: \"Sorry, I didn't get a response.\" });\n      }\n    } catch (error) {\n      console.error('Chatbot error:', error);\n      this.displayMessage({ \n        sender: 'bot', \n        text: \"I'm having trouble connecting. Please try again later.\" \n      });\n    }\n  }\n\n  // --- UI Controls ---\n  toggleChatWindow() {\n    this.isOpen = !this.isOpen;\n    this.elements.window.classList.toggle('open', this.isOpen);\n    this.elements.bubble.classList.toggle('hidden', this.isOpen);\n    \n    if (this.isOpen) {\n      this.elements.inputField.focus();\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom() {\n    if (this.elements.messagesContainer) {\n      this.elements.messagesContainer.scrollTop = this.elements.messagesContainer.scrollHeight;\n    }\n  }\n}\n\n// Initialize\nwindow.ChatbotSDK = new ChatbotWidget();\nwindow.ChatbotSDK.init();"],"names":["setLocalStorageItem","key","value","localStorage","setItem","JSON","stringify","e","console","warn","getLocalStorageItem","item","getItem","parse","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","getChatbot","window","ChatbotSDK","config","applyStyles","element","component","elementType","messageStyles","chatbot","configStyles","components","styles","getDefaultStyles","messages","Object","entries","forEach","prop","startsWith","setProperty","globalStyles","defaults","backgroundColor","buttonColor","color","buttonTextColor","botBubbleColor","botTextColor","renderMessage","messageData","sendMessageCallback","createButtons","buttons","imageUrl","styleOverrides","img","src","className","createImage","image","videoUrl","video","controls","createVideo","carouselItems","length","container","card","image_url","cardImage","content","title","textContent","subtitle","buttonsContainer","button","button_style","createCarousel","carousel","renderCustomPayload","customPayload","customContainer","classList","add","locations","mapEl","locationContainer","location","mapUrl","lat","lng","staticMap","alt","name","map","body","address","href","target","createLocationsMap","faq_list","faqEl","faqs","faq","index","question","answer","innerHTML","addEventListener","toggle","contains","expandedAnswer","createFaqList","table","tableEl","tableData","headers","rows","thead","headerRow","headerText","th","header","tbody","rowData","tr","cellData","td","cell","createTable","rating","ratingEl","ratingData","scale","starsContainer","selectedRating","i","star","dataset","querySelectorAll","s","parseInt","themeColor","starHover","remove","starSelected","createRating","forms","formEl","formData","fields","submit_payload","form","preventDefault","formValues","field","input","querySelector","field_name","userMessageText","join","submitPayload","el","disabled","fieldDiv","label","inputElement","htmlFor","options","optionText","option","id","placeholder","required","inputBackground","inputTextColor","borderColor","inputBorderColor","submitButton","submit_button_text","createDynamicForm","children","btn","button_color","payload","b","url","open","constructor","this","isOpen","sessionId","elements","refreshInterval","debug","log","args","initConfig","apiConfig","scriptTag","scriptConfig","configJson","getAttribute","error","botUrl","position","botName","inputPlaceholder","sendButtonText","init","loadConfig","initSession","readyState","createWidgetUI","setTimeout","configApiUrl","response","fetch","Date","now","json","mergeConfigs","refreshConfig","newConfig","applyDynamicStyles","updateUIElements","features","root","documentElement","adjustColor","textColor","bubble","userBubbleColor","amount","replace","colorHex","Math","min","max","toString","slice","display","opacity","computedStyle","getComputedStyle","zIndex","visibility","animation","duration","transition","bubbleStyle","width","size","height","icon","toggleChatWindow","windowEl","headerStyle","iconSize","messagesContainer","inputField","sendButton","closeButton","headerTitle","sendMessage","msg","displayMessage","scrollToBottom","showWidget","autoRefresh","startAutoRefresh","autoRefreshInterval","transform","interval","stopAutoRefresh","setInterval","clearInterval","c","r","random","message","save","messageElement","sender","text","html","parseMarkdown","buttonContainer","bind","imageEl","videoEl","carouselEl","custom","customEl","push","messageText","trim","userMessage","requestBody","customData","method","ok","Error","status","botResponses","focus","scrollTop","scrollHeight"],"mappings":"yBAmBO,SAASA,EAAoBC,EAAKC,GACvC,IACEC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,GAC1C,CAAC,MAAOK,GACPC,QAAQC,KAAK,yCAA0CF,EACxD,CACH,CAOO,SAASG,EAAoBT,GAClC,IACE,MAAMU,EAAOR,aAAaS,QAAQX,GAClC,OAAOU,EAAON,KAAKQ,MAAMF,GAAQ,IAClC,CAAC,MAAOJ,GAEP,OADAC,QAAQC,KAAK,wCAAyCF,GAC/C,IACR,CACH,ECxCA,SAAqBO,EAAKC,QACX,IAARA,IAAiBA,EAAM,CAAA,GAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,GAnBY,CAqB1D,g3TCrBA,MAAMe,EAAa,IAAMC,OAAOC,YAAc,CAAEC,OAAQ,CAAE,GAS1D,SAASC,EAAYC,EAASC,EAAWC,EAAaC,EAAgB,CAAA,GACpE,MAAMC,EAAUT,IAGVU,EAAeD,EAAQN,OAAOZ,OAAOoB,aAAaL,KAAaC,IAAgB,GAM/EK,EAAS,IACVC,EAAiBP,EAAWC,EAJZE,EAAQN,OAAOZ,OAAOuB,UAAY,CAAA,MAKlDJ,KACAF,GAILO,OAAOC,QAAQJ,GAAQK,QAAQ,EAAEC,EAAM7C,MACjCA,UAEE6C,EAAKC,WAAW,MAClBd,EAAQd,MAAM6B,YAAYF,EAAM7C,GAEhCgC,EAAQd,MAAM2B,GAAQ7C,IAI9B,CAKA,SAASwC,EAAiBP,EAAWC,EAAac,GAChD,MAAMC,EAAW,CAAA,EAEjB,OAAQhB,GACN,IAAK,UACiB,WAAhBC,IACFe,EAASC,gBAAkBF,EAAaG,YACxCF,EAASG,MAAQJ,EAAaK,iBAEhC,MACF,IAAK,WACiB,SAAhBnB,IACFe,EAASC,gBAAkBF,EAAaM,gBAEtB,cAAhBpB,GAA+C,iBAAhBA,IACjCe,EAASG,MAAQJ,EAAaO,cAEhC,MACF,IAAK,MACiB,aAAhBrB,IACFe,EAASG,MAAQJ,EAAaO,cAEhC,MACF,IAAK,SACiB,SAAhBrB,IACFe,EAASG,MAAQJ,EAAaG,aAKpC,OAAOF,CACT,CAKO,SAASO,EAAcC,EAAarC,EAAMsC,EAAsB,MACrE,OAAQtC,GACN,IAAK,UACH,OAAOuC,EAAcF,EAAYG,QAASF,EAAqBD,EAAYvC,OAC7E,IAAK,QACH,OAwFN,SAAqB2C,EAAUC,EAAiB,IAC9C,IAAKD,EAAU,OAAO,KAEtB,MAAME,EAAMhD,SAASI,cAAc,OAKnC,OAJA4C,EAAIC,IAAMH,EACVE,EAAIE,UAAY,gBAChBlC,EAAYgC,EAAK,QAAS,QAASD,GAE5BC,CACT,CAjGaG,CAAYT,EAAYU,MAAOV,EAAYvC,OACpD,IAAK,QACH,OAiGN,SAAqBkD,EAAUN,EAAiB,IAC9C,IAAKM,EAAU,OAAO,KAEtB,MAAMC,EAAQtD,SAASI,cAAc,SAMrC,OALAkD,EAAML,IAAMI,EACZC,EAAMC,UAAW,EACjBD,EAAMJ,UAAY,gBAClBlC,EAAYsC,EAAO,QAAS,QAASP,GAE9BO,CACT,CA3GaE,CAAYd,EAAYY,MAAOZ,EAAYvC,OACpD,IAAK,WACH,OA2GN,SAAwBsD,EAAed,EAAqBI,EAAiB,CAAA,GAC3E,IAAKU,GAA0C,IAAzBA,EAAcC,OAAc,OAAO,KAEzD,MAAMC,EAAY3D,SAASI,cAAc,OAiDzC,OAhDAuD,EAAUT,UAAY,6BACtBlC,EAAY2C,EAAW,WAAY,YAAaZ,EAAeY,WAE/DF,EAAc5B,QAAQnC,IACpB,MAAMkE,EAAO5D,SAASI,cAAc,OAIpC,GAHAwD,EAAKV,UAAY,wBACjBlC,EAAY4C,EAAM,WAAY,OAAQb,EAAea,MAEjDlE,EAAKmE,UAAW,CAClB,MAAMb,EAAMhD,SAASI,cAAc,OACnC4C,EAAIC,IAAMvD,EAAKmE,UACfb,EAAIE,UAAY,8BAChBlC,EAAYgC,EAAK,WAAY,YAAaD,EAAee,WACzDF,EAAKpD,YAAYwC,EAClB,CAED,MAAMe,EAAU/D,SAASI,cAAc,OACvC2D,EAAQb,UAAY,gCACpBlC,EAAY+C,EAAS,WAAY,cAAehB,EAAegB,SAE/D,MAAMC,EAAQhE,SAASI,cAAc,MAMrC,GALA4D,EAAMd,UAAY,8BAClBc,EAAMC,YAAcvE,EAAKsE,MACzBhD,EAAYgD,EAAO,WAAY,YAAajB,EAAeiB,OAC3DD,EAAQvD,YAAYwD,GAEhBtE,EAAKwE,SAAU,CACjB,MAAMA,EAAWlE,SAASI,cAAc,KACxC8D,EAAShB,UAAY,iCACrBgB,EAASD,YAAcvE,EAAKwE,SAC5BlD,EAAYkD,EAAU,WAAY,eAAgBnB,EAAemB,UACjEH,EAAQvD,YAAY0D,EACrB,CAED,GAAIxE,EAAKmD,SAASa,OAAS,EAAG,CAC5B,MAAMS,EAAmBvB,EAAclD,EAAKmD,QAASF,EAAqB,IACrEI,EACHqB,OAAQ,IACF1E,EAAK2E,cAAgB,MAGzBF,GAAkBJ,EAAQvD,YAAY2D,EAC3C,CAEDP,EAAKpD,YAAYuD,GACjBJ,EAAUnD,YAAYoD,KAGjBD,CACT,CAhKaW,CAAe5B,EAAY6B,SAAU5B,EAAqBD,EAAYvC,OAC/E,QACE,OAAO,KAEb,CAKO,SAASqE,EAAoBC,EAAe9B,EAAsB,MACrE,IAAK8B,EAAe,OAAO,KAE3B,MAAMC,EAAkB1E,SAASI,cAAc,OAI/C,GAHAsE,EAAgBC,UAAUC,IAAI,0BAC9B5D,EAAY0D,EAAiB,SAAU,YAAaD,EAActE,OAE9DsE,EAAcI,UAAW,CACzB,MAAMC,EAiJd,SAA4BD,EAAW9B,EAAiB,IACtD,IAAK8B,GAAkC,IAArBA,EAAUnB,OAAc,OAAO,KAEjD,MAAMqB,EAAoB/E,SAASI,cAAc,OA0DjD,OAzDA2E,EAAkB7B,UAAY,yBAC9BlC,EAAY+D,EAAmB,YAAa,YAAahC,EAAeY,WAExEkB,EAAUhD,QAAQmD,IAChB,MAAMC,EAAS,iCAAiCD,EAASE,OAAOF,EAASG,MACnEC,EAAY,yDAAyDJ,EAASE,OAAOF,EAASG,gDAAgDH,EAASE,OAAOF,EAASG,kDAEvKvB,EAAO5D,SAASI,cAAc,OACpCwD,EAAKV,UAAY,wBACjBlC,EAAY4C,EAAM,YAAa,OAAQb,EAAea,MAGtD,MAAMZ,EAAMhD,SAASI,cAAc,OACnC4C,EAAIC,IAAMmC,EACVpC,EAAIqC,IAAM,GAAGL,EAASM,WACtBtC,EAAIE,UAAY,uBAChBlC,EAAYgC,EAAK,YAAa,MAAOD,EAAewC,KACpD3B,EAAKpD,YAAYwC,GAGjB,MAAMwC,EAAOxF,SAASI,cAAc,OACpCoF,EAAKtC,UAAY,wBACjBlC,EAAYwE,EAAM,YAAa,OAAQzC,EAAeyC,MAGtD,MAAMxB,EAAQhE,SAASI,cAAc,OAOrC,GANA4D,EAAMd,UAAY,yBAClBc,EAAMC,YAAce,EAASM,KAC7BtE,EAAYgD,EAAO,YAAa,QAASjB,EAAeiB,OACxDwB,EAAKhF,YAAYwD,GAGbgB,EAASS,QAAS,CACpB,MAAMA,EAAUzF,SAASI,cAAc,OACvCqF,EAAQvC,UAAY,2BACpBuC,EAAQxB,YAAce,EAASS,QAC/BzE,EAAYyE,EAAS,YAAa,UAAW1C,EAAe0C,SAC5DD,EAAKhF,YAAYiF,EAClB,CAGD,MAAMrB,EAASpE,SAASI,cAAc,KACtCgE,EAAOsB,KAAOT,EACdb,EAAOuB,OAAS,SAChBvB,EAAOlB,UAAY,0BACnBkB,EAAOH,YAAc,cACrBjD,EAAYoD,EAAQ,YAAa,SAAU,CACzCjC,gBAAiBvB,IAAaG,OAAOZ,OAAOuB,UAAUU,YACtDC,MAAOzB,IAAaG,OAAOZ,OAAOuB,UAAUY,mBACzCS,EAAeqB,SAEpBoB,EAAKhF,YAAY4D,GAEjBR,EAAKpD,YAAYgF,GACjBT,EAAkBvE,YAAYoD,KAGzBmB,CACT,CA/MsBa,CAAmBnB,EAAcI,UAAWJ,EAActE,OACpE2E,GAAOJ,EAAgBlE,YAAYsE,EAC1C,CACD,GAAIL,EAAcoB,SAAU,CACxB,MAAMC,EA6Md,SAAuBC,EAAMhD,EAAiB,IAC1C,IAAKgD,GAAwB,IAAhBA,EAAKrC,OAAc,OAAO,KAEvC,MAAMC,EAAY3D,SAASI,cAAc,OAiCzC,OAhCAuD,EAAUT,UAAY,6BACtBlC,EAAY2C,EAAW,MAAO,YAAaZ,EAAeY,WAE1DoC,EAAKlE,QAAQ,CAACmE,EAAKC,KACf,MAAMvG,EAAOM,SAASI,cAAc,OACpCV,EAAKwD,UAAY,mBACjBlC,EAAYtB,EAAM,MAAO,OAAQqD,EAAerD,MAEhD,MAAMwG,EAAWlG,SAASI,cAAc,OACxC8F,EAAShD,UAAY,uBACrBgD,EAASjC,YAAc+B,EAAIE,SAC3BlF,EAAYkF,EAAU,MAAO,WAAYnD,EAAemD,UACxDxG,EAAKc,YAAY0F,GAEjB,MAAMC,EAASnG,SAASI,cAAc,OACtC+F,EAAOjD,UAAY,qBACnBiD,EAAOC,UAAYJ,EAAIG,OACvBnF,EAAYmF,EAAQ,MAAO,SAAUpD,EAAeoD,QACpDzG,EAAKc,YAAY2F,GAEjBD,EAASG,iBAAiB,QAAS,KAC/B3G,EAAKiF,UAAU2B,OAAO,YAClB5G,EAAKiF,UAAU4B,SAAS,YACxBvF,EAAYmF,EAAQ,MAAO,iBAAkBpD,EAAeyD,gBAE5DxF,EAAYmF,EAAQ,MAAO,SAAUpD,EAAeoD,UAI5DxC,EAAUnD,YAAYd,KAGnBiE,CACX,CAlPsB8C,CAAchC,EAAcoB,SAAUpB,EAActE,OAC9D2F,GAAOpB,EAAgBlE,YAAYsF,EAC1C,CACD,GAAIrB,EAAciC,MAAO,CACrB,MAAMC,EAgPd,SAAqBC,EAAW7D,EAAiB,IAC7C,IAAK6D,IAAcA,EAAUC,UAAYD,EAAUE,KAAM,OAAO,KAEhE,MAAMnD,EAAY3D,SAASI,cAAc,OACzCuD,EAAUT,UAAY,0BACtBlC,EAAY2C,EAAW,QAAS,YAAaZ,EAAeY,WAE5D,MAAM+C,EAAQ1G,SAASI,cAAc,SACrCsG,EAAMxD,UAAY,gBAClBlC,EAAY0F,EAAO,QAAS,QAAS3D,EAAe2D,OAEpD,MAAMK,EAAQ/G,SAASI,cAAc,SAC/B4G,EAAYhH,SAASI,cAAc,MACzCwG,EAAUC,QAAQhF,QAAQoF,IACtB,MAAMC,EAAKlH,SAASI,cAAc,MAClC8G,EAAGjD,YAAcgD,EACjBjG,EAAYkG,EAAI,QAAS,SAAU,CACjC/E,gBAAiBvB,IAAaG,OAAOZ,OAAOuB,UAAUU,YACtDC,MAAOzB,IAAaG,OAAOZ,OAAOuB,UAAUY,mBACzCS,EAAeoE,SAEpBH,EAAUxG,YAAY0G,KAE1BH,EAAMvG,YAAYwG,GAClBN,EAAMlG,YAAYuG,GAElB,MAAMK,EAAQpH,SAASI,cAAc,SAcrC,OAbAwG,EAAUE,KAAKjF,QAAQwF,IACnB,MAAMC,EAAKtH,SAASI,cAAc,MAClCiH,EAAQxF,QAAQ0F,IACZ,MAAMC,EAAKxH,SAASI,cAAc,MAClCoH,EAAGvD,YAAcsD,EACjBvG,EAAYwG,EAAI,QAAS,OAAQzE,EAAe0E,MAChDH,EAAG9G,YAAYgH,KAEnBJ,EAAM5G,YAAY8G,KAEtBZ,EAAMlG,YAAY4G,GAElBzD,EAAUnD,YAAYkG,GACf/C,CACX,CAzRwB+D,CAAYjD,EAAciC,MAAOjC,EAActE,OAC3DwG,GAASjC,EAAgBlE,YAAYmG,EAC5C,CACD,GAAIlC,EAAckD,OAAQ,CACtB,MAAMC,EAuRd,SAAsBC,EAAYlF,EAAqBI,EAAiB,CAAA,GACpE,IAAK8E,IAAeA,EAAWC,MAAO,OAAO,KAE7C,MAAMnE,EAAY3D,SAASI,cAAc,OACzCuD,EAAUT,UAAY,2BACtBlC,EAAY2C,EAAW,SAAU,YAAaZ,EAAeY,WAE7D,MAAMK,EAAQhE,SAASI,cAAc,OACrC4D,EAAMd,UAAY,uBAClBc,EAAMC,YAAc4D,EAAW7D,OAAS,eACxChD,EAAYgD,EAAO,SAAU,QAASjB,EAAeiB,OACrDL,EAAUnD,YAAYwD,GAEtB,MAAM+D,EAAiB/H,SAASI,cAAc,OAC9C2H,EAAe7E,UAAY,gBAC3BlC,EAAY+G,EAAgB,SAAU,iBAAkBhF,EAAegF,gBACvE,IAAIC,EAAiB,EAErB,IAAK,IAAIC,EAAIJ,EAAWC,MAAOG,GAAK,EAAGA,IAAK,CACxC,MAAMC,EAAOlI,SAASI,cAAc,QACpC8H,EAAK9B,UAAY,UACjB8B,EAAKC,QAAQlJ,MAAQgJ,EACrBjH,EAAYkH,EAAM,SAAU,OAAQ,CAClC7F,MAAOzB,IAAaG,OAAOZ,OAAOuB,UAAUU,eACzCW,EAAemF,OAGpBA,EAAK7B,iBAAiB,YAAa,KAC/B0B,EAAeK,iBAAiB,QAAQvG,QAAQwG,IACxCC,SAASD,EAAEF,QAAQlJ,QAAUgJ,IAC7BI,EAAE1D,UAAUC,IAAI,SAChB5D,EAAYqH,EAAG,SAAU,YAAa,CACpChG,MAAOzB,IAAaG,OAAOZ,OAAOoI,cAC/BxF,EAAeyF,iBAMhCN,EAAK7B,iBAAiB,WAAY,KAC9B0B,EAAeK,iBAAiB,QAAQvG,QAAQwG,IAC5CA,EAAE1D,UAAU8D,OAAO,SACnBzH,EAAYqH,EAAG,SAAU,OAAQ,CAC/BhG,MAAOzB,IAAaG,OAAOZ,OAAOuB,UAAUU,eACzCW,EAAemF,WAK5BA,EAAK7B,iBAAiB,QAAS,KAC3B2B,EAAiBC,EACjBF,EAAeK,iBAAiB,QAAQvG,QAAQwG,IACxCC,SAASD,EAAEF,QAAQlJ,QAAU+I,GAC7BK,EAAE1D,UAAUC,IAAI,YAChB5D,EAAYqH,EAAG,SAAU,eAAgB,CACvChG,MAAOzB,IAAaG,OAAOZ,OAAOoI,cAC/BxF,EAAe2F,iBAGpBL,EAAE1D,UAAU8D,OAAO,YACnBzH,EAAYqH,EAAG,SAAU,OAAQ,CAC/BhG,MAAOzB,IAAaG,OAAOZ,OAAOuB,UAAUU,eACzCW,EAAemF,UAIxBvF,GACAA,EAAoB,SAASqF,UAAwB,0BAA0BA,QAGvFD,EAAevH,YAAY0H,EAC9B,CAED,OADAvE,EAAUnD,YAAYuH,GACfpE,CACX,CAjWyBgF,CAAalE,EAAckD,OAAQhF,EAAqB8B,EAActE,OACnFyH,GAAUlD,EAAgBlE,YAAYoH,EAC7C,CACD,GAAInD,EAAcmE,MAAO,CACrB,MAAMC,EA+Vd,SAA2BC,EAAUnG,EAAqBI,EAAiB,CAAA,GACvE,IAAK+F,IAAaA,EAASC,SAAWD,EAASE,eAAgB,OAAO,KAEtE,MAAMrF,EAAY3D,SAASI,cAAc,OAIzC,GAHAuD,EAAUT,UAAY,yBACtBlC,EAAY2C,EAAW,OAAQ,YAAaZ,EAAeY,WAEvDmF,EAAS9E,MAAO,CAChB,MAAMA,EAAQhE,SAASI,cAAc,OACrC4D,EAAMd,UAAY,qBAClBc,EAAMC,YAAc6E,EAAS9E,MAC7BhD,EAAYgD,EAAO,OAAQ,QAASjB,EAAeiB,OACnDL,EAAUnD,YAAYwD,EACzB,CAED,MAAMiF,EAAOjJ,SAASI,cAAc,QACpCY,EAAYiI,EAAM,OAAQ,OAAQlG,EAAekG,MAEjDA,EAAK5C,iBAAiB,SAAW/G,IAC7BA,EAAE4J,iBACF,MAAMC,EAAa,CAAA,EAMnB,GALAL,EAASC,OAAOlH,QAAQuH,IACpB,MAAMC,EAAQJ,EAAKK,cAAc,UAAUF,EAAMG,gBAC7CF,IAAOF,EAAWC,EAAMG,YAAcF,EAAMpK,SAGhD0D,EAAqB,CACrB,MAAM6G,EAAkB,mBAAmB7H,OAAOC,QAAQuH,GAAY5D,IAAI,EAAEvG,EAAKC,KAAW,GAAGD,MAAQC,KAASwK,KAAK,QAC/GC,EAAgB,GAAGZ,EAASE,iBAAiB5J,KAAKC,UAAU8J,KAClExG,EAAoB6G,EAAiBE,EACxC,CACDT,EAAKb,iBAAiB,yBAAyBvG,QAAQ8H,GAAMA,EAAGC,UAAW,KAG/Ed,EAASC,OAAOlH,QAAQuH,IACpB,MAAMS,EAAW7J,SAASI,cAAc,OACxCyJ,EAAS3G,UAAY,qBACrBlC,EAAY6I,EAAU,OAAQ,QAAS9G,EAAeqG,OAEtD,MAAMU,EAAQ9J,SAASI,cAAc,SAMrC,IAAI2J,EALJD,EAAM7F,YAAcmF,EAAMU,MAC1BA,EAAME,QAAU,gBAAgBZ,EAAMG,aACtCvI,EAAY8I,EAAO,OAAQ,QAAS/G,EAAe+G,OACnDD,EAASrJ,YAAYsJ,GAGF,WAAfV,EAAM/I,MAAqB+I,EAAMa,SACjCF,EAAe/J,SAASI,cAAc,UACtCgJ,EAAMa,QAAQpI,QAAQqI,IAClB,MAAMC,EAASnK,SAASI,cAAc,UACtC+J,EAAOlL,MAAQiL,EACfC,EAAOlG,YAAciG,EACrBH,EAAavJ,YAAY2J,OAG7BJ,EAAe/J,SAASI,cAAc,SACtC2J,EAAa1J,KAAO+I,EAAM/I,MAG9B0J,EAAaK,GAAK,gBAAgBhB,EAAMG,aACxCQ,EAAazE,KAAO8D,EAAMG,WAC1BQ,EAAaM,YAAcjB,EAAMiB,aAAe,GAChDN,EAAaO,SAAWlB,EAAMkB,WAAY,EAC1CtJ,EAAY+I,EAAc,OAAQ,QAAS,CACzC5H,gBAAiBvB,IAAaG,OAAOZ,OAAOuB,UAAU6I,gBACtDlI,MAAOzB,IAAaG,OAAOZ,OAAOuB,UAAU8I,eAC5CC,YAAa7J,IAAaG,OAAOZ,OAAOuB,UAAUgJ,oBAC/C3H,EAAesG,QAGpBQ,EAASrJ,YAAYuJ,GACrBd,EAAKzI,YAAYqJ,KAGrB,MAAMc,EAAe3K,SAASI,cAAc,UAY5C,OAXAuK,EAAatK,KAAO,SACpBsK,EAAazH,UAAY,6BACzByH,EAAa1G,YAAc6E,EAAS8B,oBAAsB,SAC1D5J,EAAY2J,EAAc,OAAQ,eAAgB,CAChDxI,gBAAiBvB,IAAaG,OAAOZ,OAAOuB,UAAUU,YACtDC,MAAOzB,IAAaG,OAAOZ,OAAOuB,UAAUY,mBACzCS,EAAe4H,eAEpB1B,EAAKzI,YAAYmK,GAEjBhH,EAAUnD,YAAYyI,GACftF,CACX,CAtbuBkH,CAAkBpG,EAAcmE,MAAOjG,EAAqB8B,EAActE,OACrF0I,GAAQnE,EAAgBlE,YAAYqI,EAC3C,CAED,OAAOnE,EAAgBoG,SAASpH,OAAS,EAAIgB,EAAkB,IACnE,CAIA,SAAS9B,EAAcC,EAASF,EAAqBI,EAAiB,CAAA,GACpE,IAAKF,GAA8B,IAAnBA,EAAQa,OAAc,OAAO,KAE7C,MAAMC,EAAY3D,SAASI,cAAc,OAoCzC,OAnCAuD,EAAUT,UAAY,2BACtBlC,EAAY2C,EAAW,UAAW,YAAaZ,EAAeY,WAE9Dd,EAAQhB,QAAQkJ,IACd,MAAM3G,EAASpE,SAASI,cAAc,UACtCgE,EAAOH,YAAc8G,EAAI/G,MACzBI,EAAOlB,UAAY,iBAGnBlC,EAAYoD,EAAQ,UAAW,SAAU,IAEnC2G,EAAIC,cAAgB,CAAE7I,gBAAiB4I,EAAIC,iBAC3CD,EAAIC,cAAgB,CAAE3I,MAAO,YAC7B0I,EAAIC,cAAgB,CAAEP,YAAaM,EAAIC,iBAExCjI,EAAeqB,SAGhB2G,EAAIE,QACN7G,EAAOiC,iBAAiB,QAAS,KAC/B1C,EAAUyE,iBAAiB,UAAUvG,QAAQqJ,GAAKA,EAAEtB,UAAW,GAC3DjH,GAAqBA,EAAoBoI,EAAI/G,MAAO+G,EAAIE,WAErDF,EAAII,IACb/G,EAAOiC,iBAAiB,QAAS,IAAMxF,OAAOuK,KAAKL,EAAII,IAAK,WACnDJ,EAAI7E,UACb9B,EAAOiC,iBAAiB,QAAS,KAC/B1C,EAAUyE,iBAAiB,UAAUvG,QAAQqJ,GAAKA,EAAEtB,UAAW,GAC3DjH,GAAqBA,EAAoBoI,EAAI/G,MAAO+G,EAAI7E,YAIhEvC,EAAUnD,YAAY4D,KAGjBT,CACT,CC8QA9C,OAAOC,WAAa,IArbpB,MACE,WAAAuK,GACEC,KAAKvK,OAAS,GACduK,KAAKC,QAAS,EACdD,KAAKE,UAAY,KACjBF,KAAK5J,SAAW,GAChB4J,KAAKG,SAAW,GAChBH,KAAKI,gBAAkB,KACvBJ,KAAKK,OAAQ,CACd,CAED,GAAAC,IAAOC,GACDP,KAAKK,OAAOpM,QAAQqM,IAAI,eAAgBC,EAC7C,CAGD,UAAAC,CAAWC,EAAY,IACrB,MAAMC,EAAYhM,SAASsJ,cAAc,oCACzC,IAAI2C,EAAe,CAAA,EAEnB,GAAID,EAAW,CACb,MAAME,EAAaF,EAAUG,aAAa,kBAC1C,GAAID,EACF,IACED,EAAe7M,KAAKQ,MAAMsM,EAC3B,CAAC,MAAO5M,GACPC,QAAQ6M,MAAM,wDAAyD9M,EACxE,CAEJ,CAEDgM,KAAKvK,OAAS,IACTkL,KACAF,GAILT,KAAKvK,OAAOsL,OAASf,KAAKvK,OAAOsL,QAAU,2BAC3Cf,KAAKvK,OAAOwH,WAAa+C,KAAKvK,OAAOwH,YAAc,YACnD+C,KAAKvK,OAAOuL,SAAWhB,KAAKvK,OAAOuL,UAAY,eAC/ChB,KAAKvK,OAAOwL,QAAUjB,KAAKvK,OAAOwL,SAAW,UAC7CjB,KAAKvK,OAAOyL,iBAAmBlB,KAAKvK,OAAOyL,kBAAoB,uBAC/DlB,KAAKvK,OAAO0L,eAAiBnB,KAAKvK,OAAO0L,gBAAkB,MAC5D,CAED,UAAMC,GACJpB,KAAKQ,mBACCR,KAAKqB,aACXrB,KAAKsB,cAA4C,aAAxB5M,SAAS6M,YAAqD,gBAAxB7M,SAAS6M,WACxEvB,KAAKwB,iBAEL9M,SAASqG,iBAAiB,mBAAoB,KAC5C9G,QAAQqM,IAAI,iCACZN,KAAKwB,mBAKTC,WAAW,KACJzB,KAAKG,SAAS9H,YACjBpE,QAAQC,KAAK,wBACb8L,KAAKwB,mBAEN,IAEF,CAED,gBAAMH,GACJ,GAAIrB,KAAKvK,OAAOiM,aACd,IACE1B,KAAKM,IAAI,mCACT,MAAMqB,QAAiBC,MAAM,GAAG5B,KAAKvK,OAAOiM,kBAAkBG,KAAKC,SAC7DrB,QAAkBkB,EAASI,OACjC/B,KAAKgC,aAAavB,EACnB,CAAC,MAAOK,GACPd,KAAKM,IAAI,8BAA+BQ,EACzC,CAEJ,CAGD,mBAAMmB,GACJ,IACEjC,KAAKM,IAAI,+BACT,MAAMqB,QAAiBC,MAAM,GAAG5B,KAAKvK,OAAOiM,kBAAkBG,KAAKC,SAC7DI,QAAkBP,EAASI,OAKjC,OAJA/B,KAAKgC,aAAaE,GAClBlC,KAAKmC,qBACLnC,KAAKoC,mBACLpC,KAAKM,IAAI,yCACF,CACR,CAAC,MAAOQ,GAEP,OADAd,KAAKM,IAAI,4BAA6BQ,IAC/B,CACR,CACF,CAED,YAAAkB,CAAaE,GACXlC,KAAKvK,OAAS,IACTuK,KAAKvK,UACLyM,EACHrN,MAAO,IACDmL,KAAKvK,OAAOZ,OAAS,MACrBqN,EAAUrN,OAAS,IAEzBwN,SAAU,IACJrC,KAAKvK,OAAO4M,UAAY,MACxBH,EAAUG,UAAY,KAG9BrC,KAAKM,IAAI,iBAAkBN,KAAKvK,OACjC,CAED,kBAAA0M,GACE,IAAKnC,KAAKvK,OAAOZ,MAEf,YADAmL,KAAKM,IAAI,gCAIX,MAAMgC,EAAO5N,SAAS6N,iBAChB1N,MAAEA,GAAUmL,KAAKvK,OAEnBZ,EAAMoI,aACRqF,EAAKzN,MAAM6B,YAAY,wBAAyB7B,EAAMoI,YACtDqF,EAAKzN,MAAM6B,YAAY,8BAA+BsJ,KAAKwC,YAAY3N,EAAMoI,YAAa,MAGxFpI,EAAMgH,QAAQhF,iBAChByL,EAAKzN,MAAM6B,YAAY,sBAAuB7B,EAAMgH,OAAOhF,iBAGzDhC,EAAMgH,QAAQ4G,WAChBH,EAAKzN,MAAM6B,YAAY,wBAAyB7B,EAAMgH,OAAO4G,WAG3D5N,EAAM6N,QAAQ3L,OAChBuL,EAAKzN,MAAM6B,YAAY,yBAA0B7B,EAAM6N,OAAO3L,OAG5DlC,EAAMuB,UAAUuM,iBAClBL,EAAKzN,MAAM6B,YAAY,wBAAyB7B,EAAMuB,SAASuM,iBAG7D9N,EAAMuB,UAAUa,gBAClBqL,EAAKzN,MAAM6B,YAAY,uBAAwB7B,EAAMuB,SAASa,eAEjE,CAED,WAAAuL,CAAYzL,EAAO6L,GACjB,MAAO,IAAM7L,EAAM8L,QAAQ,KAAM,IAAIA,QAAQ,MAAOC,IACjD,IAAMC,KAAKC,IAAI,IAAKD,KAAKE,IAAI,EAAGjG,SAAS8F,EAAU,IAAMF,IAASM,SAAS,KAAKC,OAAO,GAC3F,CAGD,cAAA3B,GACEvN,QAAQqM,IAAI,yBACZrM,QAAQqM,IAAI,UAAWN,KAAKvK,QAE5B,MAAM4C,EAAY3D,SAASI,cAAc,OACzCuD,EAAUyG,GAAK,2BACf7K,QAAQqM,IAAI,qBAAsBjI,GAElCA,EAAUgB,UAAUC,IAAI,oBAAoB0G,KAAKvK,OAAOuL,YACxD3I,EAAUxD,MAAMuO,QAAU,OAC1B/K,EAAUxD,MAAMwO,QAAU,IAG1B3O,SAASwF,KAAKhF,YAAYmD,GAC1B2H,KAAKG,SAAS9H,UAAYA,EAC1BoJ,WAAW,KACP,MAAM6B,EAAgB/N,OAAOgO,iBAAiBvD,KAAKG,SAAS9H,WAC5DpE,QAAQqM,IAAI,mBAAoB,CAC5B8C,QAASE,EAAcF,QACvBC,QAASC,EAAcD,QACvBG,OAAQF,EAAcE,OACtBC,WAAYH,EAAcG,cAE3B,KAEP,MAAMC,EAAY1D,KAAKvK,OAAOZ,OAAO6O,WAAa,CAAE3O,KAAM,UAAW4O,SAAU,KAC3ED,EAAU3O,OACZsD,EAAUxD,MAAM+O,WAAa,OAAOF,EAAUC,mBAIhD,MAAMjB,EAAShO,SAASI,cAAc,OACtC4N,EAAO9K,UAAY,iBAEnB,MAAMiM,EAAc7D,KAAKvK,OAAOZ,OAAO6N,QAAU,CAAA,EACjDA,EAAO7N,MAAMiP,MAAQD,EAAYE,MAAQ,OACzCrB,EAAO7N,MAAMmP,OAASH,EAAYE,MAAQ,OAC1CrB,EAAO7N,MAAMgC,gBAAkBgN,EAAY9M,OAAS,6BAEhD8M,EAAYI,KACdvB,EAAO5H,UAAY+I,EAAYI,KAAKxN,WAAW,QAC7C,aAAaoN,EAAYI,qDACzBJ,EAAYI,KAEdvB,EAAO5H,UAAY,qPAOrB4H,EAAO3H,iBAAiB,QAAS,IAAMiF,KAAKkE,oBAC5C7L,EAAUnD,YAAYwN,GACtB1C,KAAKG,SAASuC,OAASA,EAGvB,MAAMyB,EAAWzP,SAASI,cAAc,OACxCqP,EAASvM,UAAY,iBACrBoI,KAAKiC,gBACL,MAAMmC,EAAcpE,KAAKvK,OAAOZ,OAAOgH,QAAU,CAAA,EACjDsI,EAASrJ,UAAY,wDAEfsJ,EAAYvN,gBAAkB,qBAAqBuN,EAAYvN,mBAAqB,eACpFuN,EAAY3B,UAAY,UAAU2B,EAAY3B,aAAe,yBAE7D2B,EAAYH,KACZ,aAAaG,EAAYH,iEACPG,EAAYC,UAAY,mBAAmBD,EAAYC,UAAY,YAAc,kDAChErE,KAAKvK,OAAOwL,mFAE7CmD,EAAY3B,UAAY,UAAU2B,EAAY3B,aAAe,6KAK/BzC,KAAKvK,OAAOyL,qEACRlB,KAAKvK,OAAO0L,8CAItD9I,EAAUnD,YAAYiP,GACtBnE,KAAKG,SAAS5K,OAAS4O,EACvBnE,KAAKG,SAASmE,kBAAoBH,EAASnG,cAAc,qBACzDgC,KAAKG,SAASoE,WAAaJ,EAASnG,cAAc,6BAClDgC,KAAKG,SAASqE,WAAaL,EAASnG,cAAc,8BAClDgC,KAAKG,SAASsE,YAAcN,EAASnG,cAAc,yBACnDgC,KAAKG,SAASuE,YAAcP,EAASnG,cAAc,yBAMnDgC,KAAKG,SAASsE,YAAY1J,iBAAiB,QAAS,IAAMiF,KAAKkE,oBAC/DlE,KAAKG,SAASqE,WAAWzJ,iBAAiB,QAAS,IAAMiF,KAAK2E,eAC9D3E,KAAKG,SAASoE,WAAWxJ,iBAAiB,WAAa/G,IACvC,UAAVA,EAAEN,KAAiBsM,KAAK2E,gBAI9B3E,KAAK5J,SAASG,QAAQqO,GAAO5E,KAAK6E,eAAeD,GAAK,IACtD5E,KAAK8E,iBACL9E,KAAK+E,aAGD/E,KAAKvK,OAAOuP,aACdhF,KAAKiF,iBAAiBjF,KAAKvK,OAAOyP,qBAAuB,IAE5D,CAED,gBAAA9C,GACMpC,KAAKG,SAASuE,cAChB1E,KAAKG,SAASuE,YAAY/L,YAAcqH,KAAKvK,OAAOwL,SAGlDjB,KAAKG,SAASoE,aAChBvE,KAAKG,SAASoE,WAAWxF,YAAciB,KAAKvK,OAAOyL,kBAGjDlB,KAAKG,SAASqE,aAChBxE,KAAKG,SAASqE,WAAW7L,YAAcqH,KAAKvK,OAAO0L,eAItD,CAED,UAAA4D,GACI9Q,QAAQqM,IAAI,gCAGdN,KAAKG,SAAS9H,UAAUxD,MAAMuO,QAAU,QACxCpD,KAAKG,SAAS9H,UAAUxD,MAAMwO,QAAU,IACxCrD,KAAKG,SAAS9H,UAAUxD,MAAM2O,OAAS,QAGvC,MAAME,EAAY1D,KAAKvK,OAAOZ,OAAO6O,WAAa,CAAE3O,KAAM,UAAW4O,SAAU,KAC/E1P,QAAQqM,IAAI,mBAAoBoD,GAEhC1D,KAAKG,SAAS9H,UAAUxD,MAAMuO,QAAU,QAEjB,YAAnBM,EAAU3O,KACZ0M,WAAW,KACTzB,KAAKG,SAAS9H,UAAUxD,MAAMwO,QAAU,KACvC,IACyB,aAAnBK,EAAU3O,MACnBiL,KAAKG,SAAS9H,UAAUxD,MAAMsQ,UAAY,mBAC1C1D,WAAW,KACTzB,KAAKG,SAAS9H,UAAUxD,MAAM+O,WAAa,OAAOF,EAAUC,kBAC5D3D,KAAKG,SAAS9H,UAAUxD,MAAMwO,QAAU,IACxCrD,KAAKG,SAAS9H,UAAUxD,MAAMsQ,UAAY,iBACzC,KAEHnF,KAAKG,SAAS9H,UAAUxD,MAAMwO,QAAU,GAE3C,CAGD,gBAAA4B,CAAiBG,EAAW,KAC1BpF,KAAKqF,kBACLrF,KAAKI,gBAAkBkF,YAAY,IAAMtF,KAAKiC,gBAAiBmD,GAC/DpF,KAAKM,IAAI,8BAA8B8E,EAAS,cACjD,CAED,eAAAC,GACMrF,KAAKI,kBACPmF,cAAcvF,KAAKI,iBACnBJ,KAAKI,gBAAkB,KAE1B,CAGD,WAAAkB,GACEtB,KAAKE,UAAY/L,EAAoB,sBAChC6L,KAAKE,YACRF,KAAKE,UHrUF,uCAAuC2C,QAAQ,QAAS,SAAS2C,GACtE,MAAMC,EAAoB,GAAhB1C,KAAK2C,SAAgB,EAE/B,OADgB,MAANF,EAAYC,EAAS,EAAJA,EAAU,GAC5BvC,SAAS,GACtB,GGkUMzP,EAAoB,qBAAsBuM,KAAKE,YAEjDF,KAAK5J,SAAWjC,EAAoB,wBAAwB6L,KAAKE,cAAgB,EAClF,CAGD,cAAA2E,CAAec,EAASC,GAAO,GAC7B,MAAMC,EAAiBnR,SAASI,cAAc,OAG9C,GAFA+Q,EAAexM,UAAUC,IAAI,kBAAsC,SAAnBqM,EAAQG,OAAoB,OAAS,OAEjFH,EAAQI,KAAM,CAChB,MAAMpN,EAAcjE,SAASI,cAAc,OAC3C6D,EAAYmC,UHzSX,SAAuBiL,GAC1B,IAAKA,EAAM,MAAO,GAClB,IAAIC,EAAOD,EAgBX,OAbAC,EAAOA,EAAKnD,QAAQ,iBAAkB,uBACtCmD,EAAOA,EAAKnD,QAAQ,aAAc,uBAGlCmD,EAAOA,EAAKnD,QAAQ,aAAc,eAClCmD,EAAOA,EAAKnD,QAAQ,WAAY,eAGhCmD,EAAOA,EAAKnD,QAAQ,2BAA4B,iEAGhDmD,EAAOA,EAAKnD,QAAQ,MAAO,SAEpBmD,CACX,CGsR8BC,CAAcN,EAAQI,MAC9CF,EAAe3Q,YAAYyD,EAC5B,CAED,GAAIgN,EAAQpO,SAASa,OAAS,EAAG,CAC/B,MAAM8N,EAAkB/O,EAAcwO,EAAS,UAAW3F,KAAK2E,YAAYwB,KAAKnG,OAC5EkG,GAAiBL,EAAe3Q,YAAYgR,EACjD,CAED,GAAIP,EAAQ7N,MAAO,CACjB,MAAMsO,EAAUjP,EAAcwO,EAAS,SACnCS,GAASP,EAAe3Q,YAAYkR,EACzC,CAED,GAAIT,EAAQ3N,MAAO,CACjB,MAAMqO,EAAUlP,EAAcwO,EAAS,SACnCU,GAASR,EAAe3Q,YAAYmR,EACzC,CAED,GAAIV,EAAQ1M,UAAUb,OAAS,EAAG,CAChC,MAAMkO,EAAanP,EAAcwO,EAAS,WAAY3F,KAAK2E,YAAYwB,KAAKnG,OACxEsG,GAAYT,EAAe3Q,YAAYoR,EAC5C,CAED,GAAIX,EAAQY,OAAQ,CAClB,MAAMC,EAAWtN,EAAoByM,EAAQY,OAAQvG,KAAK2E,YAAYwB,KAAKnG,OACvEwG,GAAUX,EAAe3Q,YAAYsR,EAC1C,CAEDxG,KAAKG,SAASmE,kBAAkBpP,YAAY2Q,GAExCD,IACF5F,KAAK5J,SAASqQ,KAAKd,GACnBlS,EAAoB,wBAAwBuM,KAAKE,YAAaF,KAAK5J,WAGrE4J,KAAK8E,gBACN,CAED,iBAAMH,CAAYoB,EAAO,KAAMpG,EAAU,MACvC,IAAI+G,EAAcX,GAAQ/F,KAAKG,SAASoE,WAAW5Q,MAAMgT,OACzD,IAAKD,IAAgB/G,EAAS,OAE9B,MAAMiH,EAAc,CAAEd,OAAQ,OAAQC,KAAMW,GAC5C1G,KAAK6E,eAAe+B,GACpB5G,KAAKG,SAASoE,WAAW5Q,MAAQ,GAEjC,MAAMkT,EAAc,CAClBf,OAAQ9F,KAAKE,UACbyF,QAASe,KACL/G,GAAW,CAAEmH,WAAY,CAAEnH,aAGjC,IACE,MAAMgC,QAAiBC,MAAM5B,KAAKvK,OAAOsL,OAAQ,CAC/CgG,OAAQ,OACRxL,QAAS,CAAE,eAAgB,oBAC3BrB,KAAMpG,KAAKC,UAAU8S,KAGvB,IAAKlF,EAASqF,GAAI,MAAM,IAAIC,MAAM,uBAAuBtF,EAASuF,UAElE,MAAMC,QAAqBxF,EAASI,OAChCoF,GAAc/O,OAAS,EACzB+O,EAAa5Q,QAAQoL,GAAY3B,KAAK6E,eAAe,CAAEiB,OAAQ,SAAUnE,KAEzE3B,KAAK6E,eAAe,CAAEiB,OAAQ,MAAOC,KAAM,mCAE9C,CAAC,MAAOjF,GACP7M,QAAQ6M,MAAM,iBAAkBA,GAChCd,KAAK6E,eAAe,CAClBiB,OAAQ,MACRC,KAAM,0DAET,CACF,CAGD,gBAAA7B,GACElE,KAAKC,QAAUD,KAAKC,OACpBD,KAAKG,SAAS5K,OAAO8D,UAAU2B,OAAO,OAAQgF,KAAKC,QACnDD,KAAKG,SAASuC,OAAOrJ,UAAU2B,OAAO,SAAUgF,KAAKC,QAEjDD,KAAKC,SACPD,KAAKG,SAASoE,WAAW6C,QACzBpH,KAAK8E,iBAER,CAED,cAAAA,GACM9E,KAAKG,SAASmE,oBAChBtE,KAAKG,SAASmE,kBAAkB+C,UAAYrH,KAAKG,SAASmE,kBAAkBgD,aAE/E,GAKH/R,OAAOC,WAAW4L"}